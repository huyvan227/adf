{
	"name": "CR SDE MASTER",
	"properties": {
		"activities": [
			{
				"name": "Get SDE Job Information",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": {
							"value": "SELECT *\nFROM ADF.ETL_JOB\nWHERE \nSTAGE_GROUP = 'SDE' \nAND (CASE WHEN '@{pipeline().parameters.GROUP_NAME}' = '01' THEN [GROUP_01] ELSE '1' END) = (CASE WHEN '@{pipeline().parameters.GROUP_NAME}' = '01' THEN '@{pipeline().parameters.GROUP_VALUE}' ELSE '1' END) \nAND IS_ACTIVE_FLG= 1\nORDER BY JOB_ORDER",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SBC_Azure_Synapse1",
						"type": "DatasetReference",
						"parameters": {
							"TGT_TABLE": "N/A"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get SDE Job Information",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get SDE Job Information').output.value",
						"type": "Expression"
					},
					"batchCount": 4,
					"activities": [
						{
							"name": "Check Blob Exists",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "Blob_Container",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@substring(item().CONTAINER, 0, indexof(item().CONTAINER, '/'))",
											"type": "Expression"
										},
										"path": {
											"value": "@replace(substring(item().CONTAINER, add(indexof(item().CONTAINER, '/'), 1), sub(length(item().CONTAINER), add(indexof(item().CONTAINER, '/'), 1))),'%d',pipeline().parameters.current_data_time)",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Check Blob Exists",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(activity('Check Blob Exists').output.exists,true)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Execute SDE If",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "CR SDE IF",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"current_data_time": {
													"value": "@pipeline().parameters.current_data_time",
													"type": "Expression"
												},
												"batch_id": {
													"value": "@pipeline().parameters.batch_id",
													"type": "Expression"
												},
												"have_header": {
													"value": "@item().HAVE_HEADER",
													"type": "Expression"
												},
												"input_container": {
													"value": "@substring(item().CONTAINER, 0, indexof(item().CONTAINER, '/'))",
													"type": "Expression"
												},
												"input_path": {
													"value": "@substring(item().CONTAINER, add(indexof(item().CONTAINER, '/'), 1), sub(length(item().CONTAINER), add(indexof(item().CONTAINER, '/'), 1)))",
													"type": "Expression"
												},
												"target_table": {
													"value": "@item().TGT_TABLE",
													"type": "Expression"
												},
												"job_id": {
													"value": "@item().JOB_ID",
													"type": "Expression"
												},
												"job_name": {
													"value": "@item().JOB_NAME",
													"type": "Expression"
												},
												"job_type": {
													"value": "@item().JOB_TYPE",
													"type": "Expression"
												},
												"stage_group": {
													"value": "@item().STAGE_GROUP",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"current_data_time": {
				"type": "string"
			},
			"batch_id": {
				"type": "string"
			},
			"GROUP_NAME": {
				"type": "string"
			},
			"GROUP_VALUE": {
				"type": "string"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-09-21T14:44:36Z",
		"lastUpdateUtc": "2022-12-08T09:59:14Z",
		"createTimeUtc": "0001-01-01T00:00:00Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}